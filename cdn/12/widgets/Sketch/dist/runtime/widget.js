System.register(["jimu-core","jimu-arcgis","esri/widgets/Sketch/SketchViewModel","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/Graphic","esri/widgets/FeatureForm"],(function(e,t){var i={},a={},n={},r={},s={},o={},l={};return{setters:[function(e){i.React=e.React},function(e){a.JimuMapViewComponent=e.JimuMapViewComponent},function(e){n.default=e.default},function(e){r.default=e.default},function(e){s.default=e.default},function(e){o.default=e.default},function(e){l.default=e.default}],execute:function(){e((()=>{var e={2089:e=>{"use strict";e.exports=o},5633:e=>{"use strict";e.exports=r},9620:e=>{"use strict";e.exports=s},3387:e=>{"use strict";e.exports=l},624:e=>{"use strict";e.exports=n},2686:e=>{"use strict";e.exports=a},9244:e=>{"use strict";e.exports=i}},t={};function c(i){var a=t[i];if(void 0!==a)return a.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,c),n.exports}c.d=(e,t)=>{for(var i in t)c.o(t,i)&&!c.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var d={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(d),c.d(d,{__set_webpack_public_path__:()=>u,default:()=>l});var e=c(9244),t=c(2686),i=c(624),a=c(5633),n=c(9620),r=c(2089),s=c(3387),o=function(e,t,i,a){return new(i||(i=Promise))((function(n,r){function s(e){try{l(a.next(e))}catch(e){r(e)}}function o(e){try{l(a.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,o)}l((a=a.apply(e,t||[])).next())}))};class l extends e.React.PureComponent{constructor(t){super(t),this.myRef=e.React.createRef(),this.cleanupFeatureForm=()=>{this.featureFormRef.current&&(this.featureFormRef.current.destroy(),this.featureFormRef.current=null)},this.handleClose=()=>{this.cleanupReshape&&(this.cleanupReshape(),this.cleanupReshape=null),this.state.sketchViewModel&&this.state.sketchViewModel.cancel(),this.cleanupFeatureForm(),this.setState({editorVisible:!1,selectedGraphic:null,previewGraphic:null,isDrawingActive:!1,isDrawingPolygon:!1,activeDrawMode:null})},this.handleConfirmPolygon=()=>o(this,void 0,void 0,(function*(){const{previewGraphic:e,selectedLayer:t}=this.state;if(t&&e)try{const i=yield t.applyEdits({addFeatures:[new r.default({geometry:e.geometry,attributes:{}})]});if(i.addFeatureResults.length>0){const e=i.addFeatureResults[0].objectId;if(e){const i=t.createQuery();i.objectIds=[e],i.outFields=["*"],i.returnGeometry=!0;const a=yield t.queryFeatures(i);if(a.features.length>0){const e=a.features[0];console.log("Feature added:",e),this.state.tempGraphicsLayer.removeAll(),yield new Promise((t=>{this.setState({selectedGraphic:e,editorVisible:!0,isSubmitted:!1,previewGraphic:null,isDrawingActive:!1,isDrawingPolygon:!1,activeDrawMode:null},(()=>{setTimeout((()=>{const e=document.querySelector(".feature-form-container");e&&this.launchFeatureFormWidget(e)}),0),t()}))}))}}}}catch(e){console.error("Failed to add polygon to the selected layer:",e)}else console.error("No layer selected or no polygon to confirm!")})),this.launchFeatureFormWidget=e=>o(this,void 0,void 0,(function*(){const{jimuMapView:t,selectedGraphic:i}=this.state;if(!e||!t||!i)return void console.error("Missing container, map view, or selected graphic.");this.cleanupFeatureForm(),e.innerHTML="";const n=i.layer;if(!(n instanceof a.default))return void console.error("Selected graphic's layer is not a FeatureLayer.");const l={elements:[{type:"group",label:"Attributes",elements:n.fields.filter((e=>!["Shape__Area","Shape__Length"].includes(e.name))).map((e=>({type:"field",fieldName:e.name,label:e.alias||e.name,editable:e.editable})))}]},c=new s.default({container:e,layer:n,feature:i,formTemplate:l});this.featureFormRef.current=c,c.on("submit",(()=>o(this,void 0,void 0,(function*(){if(!this.state.selectedGraphic)return void console.error("No feature selected for updating.");const{selectedGraphic:e}=this.state;try{const t=c.getValues();Object.keys(t).forEach((i=>{e.attributes[i]=t[i]}));const i=new r.default({geometry:e.geometry,attributes:e.attributes,layer:e.layer}),a=yield e.layer.applyEdits({updateFeatures:[i]});if(a.updateFeatureResults.length>0&&a.updateFeatureResults[0].success){console.log("Feature updated successfully!");const e=this.state.jimuMapView.view;this.initializeReshapeSketchVM(e,i),this.handleClose()}else console.error("Failed to update the feature.")}catch(e){console.error("Error applying edits:",e)}}))))})),this.handleLayerSelectionAndDrawing=(e,t)=>{var i;const a=null===(i=this.state.jimuMapView)||void 0===i?void 0:i.view.map.findLayerById(e);a&&this.setState({selectedLayer:a,activeDrawMode:t,isDrawingActive:!0,isDrawingPoint:"point"===t},(()=>{this.initializeSketchViewModel(this.state.jimuMapView.view,t),setTimeout((()=>{this.startDrawing(t)}),0)}))},this.initializeSketchViewModel=(e,t)=>{e.map.add(this.state.tempGraphicsLayer);const a=e=>{const t=[];return e.forEach((e=>{"group"===e.type?t.push(...a(e.layers)):"feature"!==e.type||"National FireGuard Service"!==e.title&&"FireGuard Archive"!==e.title&&"BC Perimeter Feed"!==e.title&&"FireGuard_Analysts_Canadian"!==e.title&&"Active Wildfire Perimeters in Canada"!==e.title&&"WFIGS Current Interagency Fire Perimeters"!==e.title||t.push(e)})),t},n="polygon"===t?a(e.map.layers):[],r={view:e,layer:this.state.tempGraphicsLayer,updateOnGraphicClick:!0,defaultCreateOptions:{mode:"click",hasZ:!1},tooltipOptions:{enabled:!0},snappingOptions:{enabled:!0,distance:25,featureSources:n.map((e=>({layer:e,enabled:!0})))}},s={view:e,layer:this.state.tempGraphicsLayer,updateOnGraphicClick:!0,defaultCreateOptions:{mode:"freehand",hasZ:!1},tooltipOptions:{enabled:!0},snappingOptions:null},o=new i.default("polygon"===t?r:s);o.on("create",(e=>{if("complete"===e.state){const t=e.graphic;this.setState({previewGraphic:t})}else"cancel"===e.state?(this.setState({previewGraphic:null,isDrawingPolygon:!1}),this.state.tempGraphicsLayer.removeAll()):"active"===e.state&&this.setState({isDrawingPolygon:!0})})),o.on("update",(e=>{if("complete"===e.state&&e.graphics.length>0){const t=e.graphics[0];this.setState({selectedFeature:t}),console.log("Feature selected:",t)}})),this.setState({sketchViewModel:o})},this.startDrawing=e=>{this.state.sketchViewModel&&(this.state.sketchViewModel.cancel(),this.state.tempGraphicsLayer.removeAll(),this.setState({isDrawingPolygon:"point"!==e,isDrawingPoint:"point"===e,previewGraphic:null},(()=>{this.state.tempGraphicsLayer.removeAll(),this.state.jimuMapView.view.cursor="default",this.state.sketchViewModel.create("point"===e?"point":"polygon",{mode:"freehand"===e?"freehand":"click"})})))},this.handleConfirmPoint=e=>o(this,void 0,void 0,(function*(){const{selectedLayer:t}=this.state;if(t)try{const i=yield t.applyEdits({addFeatures:[new r.default({geometry:e.geometry,attributes:{}})]});if(i.addFeatureResults.length>0){const e=i.addFeatureResults[0].objectId;if(e){const i=t.createQuery();i.objectIds=[e],i.outFields=["*"],i.returnGeometry=!0;const a=yield t.queryFeatures(i);if(a.features.length>0){const e=a.features[0];console.log("Point feature added:",e),this.setState({selectedGraphic:e,editorVisible:!0,isSubmitted:!1,previewGraphic:null,isDrawingActive:!1,isDrawingPoint:!1},(()=>{const e=document.querySelector(".feature-form-container");e&&this.launchFeatureFormWidget(e)}))}}}this.state.tempGraphicsLayer.removeAll()}catch(e){console.error("Failed to add point to the selected layer:",e)}else console.error("No layer selected!")})),this.startReshapeTempGraphic=()=>{const{sketchViewModel:e,tempGraphicsLayer:t}=this.state;if(e&&t.graphics.length>0){const i=t.graphics.getItemAt(0);e.update([i],{tool:"transform",enableScaling:!0,enableRotation:!0,preserveAspectRatio:!1}),console.log("Editing vertices of the temp graphics layer graphic.")}else console.warn("No temporary graphic available for reshaping.")},this.handleCancelPolygon=()=>{this.state.sketchViewModel&&(this.state.sketchViewModel.cancel(),this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null})),this.state.tempGraphicsLayer&&this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null,isDrawingPolygon:!1,isDrawingActive:!1,activeDrawMode:null})},this.getFeatureLayers=(e,t)=>{const i=[];return e.forEach((e=>{"group"===e.type?e.title===t&&i.push(...this.getFeatureLayers(e.layers,t)):"feature"!==e.type||"National FireGuard Service"!==e.title&&"point"!==e.title&&"FireGuard Reference Points"!==e.title&&"FireGuard_Analysts_Canadian"!==e.title&&"FireGuard Canadian Reference Points"!==e.title||i.push(e)})),i},this.activeViewChangeHandler=e=>{if(e){const t="Analyst Layers",i=this.getFeatureLayers(e.view.map.layers,t);this.setState({jimuMapView:e,availableLayers:i}),this.initializeSketchViewModel(e.view,"polygon")}},this.initializeReshapeSketchVM=(e,t)=>{this.state.sketchViewModel&&(this.state.sketchViewModel.destroy(),this.setState({sketchViewModel:null}));const a=new n.default({listMode:"hide"});e.map.add(a);const s=t.clone();a.add(s);const o=new i.default({view:e,layer:a,defaultUpdateOptions:{tool:"reshape",toggleToolOnClick:!1,enableRotation:!0,enableScaling:!0,preserveAspectRatio:!1,multipleSelectionEnabled:!1},defaultCreateOptions:{mode:"click"},updateOnGraphicClick:!0,snappingOptions:{enabled:!0,distance:15,featureSources:[{layer:t.layer,enabled:!0}]}});o.on("update",(e=>{"active"!==e.state&&"complete"!==e.state||e.graphics.length>0&&(this.latestPendingGraphic=new r.default({geometry:e.graphics[0].geometry,attributes:t.attributes,layer:t.layer}))}));const l=()=>{o&&(o.cancel(),o.destroy()),a.remove(s),e.map.remove(a),this.latestPendingGraphic=null},c=e.on("click",(t=>{const i={x:t.x,y:t.y};e.hitTest(i).then((e=>{e.results.find((e=>e.graphic===s))||(l(),c.remove(),this.handleClose())}))}));o.update([s],{tool:"reshape",enableRotation:!0,enableScaling:!0,preserveAspectRatio:!1}),this.cleanupReshape=l,this.setState({sketchViewModel:o})},this.commitPendingChanges=()=>o(this,void 0,void 0,(function*(){var e,t,i,a;if(this.latestPendingGraphic)try{const n=yield this.latestPendingGraphic.layer.applyEdits({updateFeatures:[this.latestPendingGraphic]});(null===(t=null===(e=n.updateFeatureResults)||void 0===e?void 0:e[0])||void 0===t?void 0:t.success)?console.log("Changes committed successfully"):console.error("Failed to commit changes:",null===(a=null===(i=n.updateFeatureResults)||void 0===i?void 0:i[0])||void 0===a?void 0:a.error)}catch(e){throw console.error("Error committing changes:",e),e}finally{this.latestPendingGraphic=null}else console.log("No pending changes to commit")})),this.handleSelectFeature=e=>{var t;const i=null===(t=this.state.jimuMapView)||void 0===t?void 0:t.view.map.findLayerById(e);if(!i||!this.state.jimuMapView)return;const a=this.state.jimuMapView.view;i.popupEnabled=!1;const n=a.on("click",(e=>o(this,void 0,void 0,(function*(){const t={x:e.x,y:e.y};try{const e=(yield a.hitTest(t)).results.find((e=>e.graphic.layer===i&&e.graphic.geometry));if(e){n.remove();const t=e.graphic,r=i.createQuery();r.objectIds=[t.attributes[i.objectIdField]],r.outFields=["*"];const s=yield i.queryFeatures(r);if(s.features.length>0){const e=s.features[0];yield new Promise((i=>{this.setState({selectedGraphic:e,editorVisible:!this.state.editorVisible,isSubmitted:!1,previewGraphic:null,isDrawingActive:!1,isDrawingPolygon:!1},(()=>{setTimeout((()=>{const e=document.querySelector(".feature-form-container");e&&this.launchFeatureFormWidget(e)}),0),i()})),this.initializeReshapeSketchVM(a,t)}))}else console.log("No feature selected at clicked location.")}i.popupEnabled=!0,n.remove()}finally{}}))))},this.getLayerSymbol=e=>{var t,i;if(!e)return null;try{const a=e.renderer;let n;if("simple"===a.type?n=a.symbol:"unique-value"===a.type&&(n=a.defaultSymbol||a.uniqueValueInfos[0]&&a.uniqueValueInfos[0].symbol),n&&"simple-fill"===n.type)return{fillColor:n.color?`rgba(${n.color.r}, ${n.color.g}, ${n.color.b}, ${n.color.a})`:"rgba(0, 0, 0, 0.3)",outlineColor:(null===(t=n.outline)||void 0===t?void 0:t.color)?`rgba(${n.outline.color.r}, ${n.outline.color.g}, ${n.outline.color.b}, ${n.outline.color.a})`:"#000",outlineWidth:(null===(i=n.outline)||void 0===i?void 0:i.width)||1}}catch(e){console.error("Error getting layer symbol:",e)}return null},this.handleDelete=()=>o(this,void 0,void 0,(function*(){const{selectedGraphic:e}=this.state;if(e&&e.layer)try{const t=yield e.layer.applyEdits({deleteFeatures:[e]});t.deleteFeatureResults.length>0&&t.deleteFeatureResults[0].success?(console.log("Feature deleted successfully"),this.handleClose()):console.error("Failed to delete feature")}catch(e){console.error("Error deleting feature:",e)}else console.error("No feature selected for deletion")})),this.handleEscKey=e=>{var t;if("Escape"===e.key){const{sketchViewModel:e}=this.state;e&&e.cancel(),null===(t=this.state.tempGraphicsLayer)||void 0===t||t.removeAll(),this.cleanupFeatureForm(),this.setState({previewGraphic:null,isDrawingActive:!1,activeDrawMode:null,isDrawingPolygon:!1,editorVisible:!1,selectedGraphic:null})}},this.handleSubmitChanges=()=>o(this,void 0,void 0,(function*(){var e,t,i,a,n,s,o,l;try{this.state.sketchViewModel&&(yield this.state.sketchViewModel.complete());const{selectedGraphic:c}=this.state,d=this.latestPendingGraphic;let u={},h=0;const p=3;for(;h<p;)if(this.featureFormRef.current)try{u=this.featureFormRef.current.getValues();break}catch(e){console.warn(`Attempt ${h+1} to get form values failed:`,e),yield new Promise((e=>setTimeout(e,100))),h++}else yield new Promise((e=>setTimeout(e,100))),h++;if(c&&d){const n=c.layer;if(!n)throw new Error("No valid layer found for update");const s=Object.assign(Object.assign(Object.assign({},c.attributes),u),{[n.objectIdField]:c.attributes[n.objectIdField]}),o=new r.default({geometry:d.geometry,attributes:s,layer:n}),l=yield n.applyEdits({updateFeatures:[o]});if(!(null===(t=null===(e=l.updateFeatureResults)||void 0===e?void 0:e[0])||void 0===t?void 0:t.success))throw new Error("Update operation failed: "+JSON.stringify(null===(a=null===(i=l.updateFeatureResults)||void 0===i?void 0:i[0])||void 0===a?void 0:a.error))}else if(c){const e=c.layer;if(!e)throw new Error("No valid layer found for update");const t=new r.default({geometry:c.geometry,attributes:Object.assign(Object.assign({},c.attributes),u),layer:e}),i=yield e.applyEdits({updateFeatures:[t]});if(!(null===(s=null===(n=i.updateFeatureResults)||void 0===n?void 0:n[0])||void 0===s?void 0:s.success))throw new Error("Update operation failed: "+JSON.stringify(null===(l=null===(o=i.updateFeatureResults)||void 0===o?void 0:o[0])||void 0===l?void 0:l.error))}return this.latestPendingGraphic=null,this.setState({pendingGraphic:null,selectedGraphic:null,editorVisible:!1,isSubmitted:!0,previewGraphic:null,isDrawingActive:!1,isDrawingPolygon:!1}),this.state.tempGraphicsLayer&&this.state.tempGraphicsLayer.removeAll(),console.log("Update completed successfully"),!0}catch(e){throw console.error("Error in handleSubmitChanges:",e),e}})),this.featureFormRef=e.React.createRef(),this.state={jimuMapView:null,sketchViewModel:null,selectedLayer:null,availableLayers:[],previewGraphic:null,tempGraphicsLayer:new n.default,isDrawingPolygon:!1,editorVisible:!1,selectedGraphic:null,isDrawingPoint:null}}componentDidMount(){document.addEventListener("keydown",this.handleEscKey)}componentWillUnmount(){document.removeEventListener("keydown",this.handleEscKey)}componentDidUpdate(){"CLOSED"===this.props.state&&(console.log("Widget is closed - canceling draw mode"),this.state.sketchViewModel&&(this.state.sketchViewModel.cancel(),this.state.sketchViewModel.destroy()),this.state.tempGraphicsLayer&&this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null,isDrawingActive:!1,isDrawingPolygon:!1,activeDrawMode:null,sketchViewModel:null}),this.state.jimuMapView&&(this.state.jimuMapView.view.cursor="default"))}render(){var i;let a=e.React.createElement("p",null,"Please select a map.");const{availableLayers:n,previewGraphic:r,editorVisible:s,isDrawingPolygon:o}=this.state;return this.props.hasOwnProperty("useMapWidgetIds")&&(null===(i=this.props.useMapWidgetIds)||void 0===i?void 0:i[0])&&(a=e.React.createElement(t.JimuMapViewComponent,{useMapWidgetId:this.props.useMapWidgetIds[0],onActiveViewChange:this.activeViewChangeHandler})),e.React.createElement("div",{className:"widget-js-api-editor",style:{height:"100%",overflow:"auto"}},e.React.createElement("div",{className:"layer-buttons"},n.map((t=>{var i;const a=this.getLayerSymbol(t),n="point"===t.geometryType,r=null===(i=this.state.selectedLayer)||void 0===i?void 0:i.id,s=t.id===r,o=this.state.isDrawingActive&&!n,l=this.state.isDrawingActive&&n;return!this.state.isDrawingActive||s?e.React.createElement("div",{key:t.id,className:"layer-option"},e.React.createElement("div",{className:"layer-header"},a&&e.React.createElement("div",{className:"layer-symbol",style:{backgroundColor:a.fillColor,border:`${a.outlineWidth}px solid ${a.outlineColor}`,width:"20px",height:"20px",borderRadius:"4px",display:"inline-block"}}),e.React.createElement("h3",{className:"layer-title"},t.title)),s&&o&&e.React.createElement("pre",{style:{marginTop:"8px",color:"#555",fontSize:"14px",whiteSpace:"pre-wrap",textAlign:"center"}},"Click the map to start drawing.","\n","\n","\n","Double-click to finish drawing.","\n","\n","\n","Press ESC to discard edits."),s&&l&&e.React.createElement("pre",{style:{marginTop:"8px",color:"#555",fontSize:"14px",whiteSpace:"pre-wrap",textAlign:"center"}},"Click the map to place point.","\n","\n","\n","Press ESC to discard edits."),(!this.state.isDrawingActive||s)&&e.React.createElement("div",{className:"button-group"},n?e.React.createElement(e.React.Fragment,null,!l&&e.React.createElement(e.React.Fragment,null,e.React.createElement("button",{className:"button-base button-primary",onClick:()=>this.handleLayerSelectionAndDrawing(t.id,"point"),disabled:this.state.isDrawingActive&&!s},"Create Point"),e.React.createElement("button",{className:"button-base button-secondary",onClick:()=>this.handleSelectFeature(t.id),disabled:this.state.isDrawingActive&&!s},"Select & Edit Feature"))):e.React.createElement(e.React.Fragment,null,!o&&e.React.createElement(e.React.Fragment,null,e.React.createElement("button",{className:"button-base button-primary",onClick:()=>this.handleLayerSelectionAndDrawing(t.id,"polygon"),disabled:this.state.isDrawingActive&&!s},"Create Polygon"),e.React.createElement("button",{className:"button-base button-primary",onClick:()=>this.handleLayerSelectionAndDrawing(t.id,"freehand"),disabled:this.state.isDrawingActive&&!s},"Create Freehand Polygon"),e.React.createElement("button",{className:"button-base button-secondary",onClick:()=>this.handleSelectFeature(t.id),disabled:this.state.isDrawingActive&&!s},"Select & Edit Feature"))))):null}))),this.state.isDrawingActive&&e.React.createElement("div",{style:{position:"fixed",top:"1rem",left:"50%",transform:"translateX(-50%)",backgroundColor:"rgba(255, 0, 0, 0.9)",color:"white",padding:"0.75rem 1.5rem",borderRadius:"0.5rem",zIndex:1e3,display:"flex",alignItems:"center",gap:"0.5rem"}},e.React.createElement("span",null,"Press ESC key to cancel drawing")),r&&e.React.createElement("div",{className:"preview-controls"},!this.state.isDrawingPoint&&e.React.createElement("button",{onClick:this.startReshapeTempGraphic,className:"button-base button-secondary"},"Reshape"),e.React.createElement("button",{onClick:this.state.isDrawingPoint?()=>this.handleConfirmPoint(r):this.handleConfirmPolygon,className:"button-base button-success"},"Confirm"),e.React.createElement("button",{onClick:this.handleCancelPolygon,className:"button-base button-danger"},"Discard ",this.state.isDrawingPoint?"Point":"Polygon")),s&&e.React.createElement("div",{className:"editor-container"},e.React.createElement("div",{className:"feature-form-container"}),e.React.createElement("div",{className:"button-container"},e.React.createElement("button",{onClick:this.handleClose,className:"button-base button-secondary"},"Close"),e.React.createElement("button",{onClick:()=>{this.handleSubmitChanges().catch((e=>{console.error("Failed to submit changes:",e)})).finally((()=>{this.handleClose()}))},className:"button-base button-primary"},"Update Changes"),e.React.createElement("button",{onClick:()=>{this.handleDelete(),this.handleClose()},className:"button-base button-danger"},"Delete Feature"))),e.React.createElement("div",{ref:this.myRef},e.React.createElement("style",null,"\n      .layer-buttons {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;  \n        padding: 1.5rem;\n        max-width: 800px;\n        margin: 0 auto;\n      }\n      \n      .layer-option {\n        background: white;\n        padding: 1.5rem;\n        border-radius: 0.5rem;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        display: flex;\n        align-items: flex-start;  \n        gap: 2rem;  \n        flex-wrap: wrap;\n      }\n        \n      .layer-header {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        flex: 1;\n        min-width: 200px;\n      }\n      \n      .layer-symbol {\n        width: 20px;\n        height: 20px;\n        border-radius: 4px;\n      }\n      \n      .layer-title {\n        font-size: 1.25rem;\n        font-weight: 600;\n        color: #1f2937;\n        margin: 0;\n      }\n\n      .button-group {\n        display: flex;\n        gap: 1rem; \n        flex-wrap: wrap;\n        align-items: center;\n      }\n      \n      .button-base {\n        padding: 0.75rem 1.25rem;\n        border-radius: 0.375rem;\n        font-weight: 500;\n        transition: all 0.2s;\n        outline: none;\n        border: none;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n      }\n      \n      .button-base:focus {\n        box-shadow: 0 0 0 2px #e5e7eb, 0 0 0 4px #18191a;\n      }\n      \n      .button-base:active {\n        transform: scale(0.98);\n      }\n      \n      .button-primary {\n        background-color: #3b82f6;\n        color: white;\n      }\n      \n      .button-primary:hover {\n        background-color: #2563eb;\n      }\n      \n      .button-primary:active {\n        background-color: #1d4ed8;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-success {\n        background-color: #10b981;\n        color: white;\n      }\n      \n      .button-success:hover {\n        background-color: #059669;\n      }\n      \n      .button-success:active {\n        background-color: #047857;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-secondary {\n        background-color: #f3f4f6;\n        color: #374151;\n        border: 1px solid #e5e7eb;\n      }\n      \n      .button-secondary:hover {\n        background-color: #e5e7eb;\n      }\n      \n      .button-secondary:active {\n        background-color: #d1d5db;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-danger {\n        background-color: #ef4444;\n        color: white;\n      }\n      \n      .button-danger:hover {\n        background-color: #dc2626;\n      }\n      \n      .button-danger:active {\n        background-color: #b91c1c;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .preview-controls {\n        position: fixed;\n        bottom: 2rem;\n        right: 2rem;\n        display: flex;\n        gap: 0.5rem;\n        padding: 1rem;\n        background: white;\n        border-radius: 0.5rem;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        z-index: 1000;\n      }\n      \n      .editor-container {\n        position: fixed;\n        top: 50%;\n        left: 20%;\n        transform: translate(-50%, -50%);\n        background: white;\n        border-radius: 0.5rem;\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n        z-index: 2000;\n        width: 500px;\n        height: 600px;\n        display: flex;\n        flex-direction: column;\n        padding: 1.5rem;\n      }\n      \n      .feature-form-container {\n        flex: 1;\n        overflow-y: auto;\n        margin-bottom: 4rem;\n      }\n      \n      .button-container {\n        position: absolute;\n        bottom: 1rem;\n        right: 1rem;\n        display: flex;\n        gap: 0.5rem;\n        padding: 1rem;\n        background-color: white;\n        z-index: 2001;\n      }\n    ")),a)}}function u(e){c.p=e}})(),d})())}}}));