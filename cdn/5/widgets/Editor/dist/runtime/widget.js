System.register(["jimu-core","jimu-arcgis","esri/widgets/Editor","esri/widgets/Sketch/SketchViewModel","esri/layers/GraphicsLayer","esri/Graphic","esri/PopupTemplate"],(function(e,t){var a={},i={},r={},n={},s={},o={},l={};return{setters:[function(e){a.React=e.React},function(e){i.JimuMapViewComponent=e.JimuMapViewComponent},function(e){r.default=e.default},function(e){n.default=e.default},function(e){s.default=e.default},function(e){o.default=e.default},function(e){l.default=e.default}],execute:function(){e((()=>{var e={2089:e=>{"use strict";e.exports=o},9025:e=>{"use strict";e.exports=l},9620:e=>{"use strict";e.exports=s},8816:e=>{"use strict";e.exports=r},624:e=>{"use strict";e.exports=n},2686:e=>{"use strict";e.exports=i},9244:e=>{"use strict";e.exports=a}},t={};function c(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,c),r.exports}c.d=(e,t)=>{for(var a in t)c.o(t,a)&&!c.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var d={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(d),c.d(d,{__set_webpack_public_path__:()=>u,default:()=>l});var e=c(9244),t=c(2686),a=c(8816),i=c(624),r=c(9620),n=c(2089),s=c(9025),o=function(e,t,a,i){return new(a||(a=Promise))((function(r,n){function s(e){try{l(i.next(e))}catch(e){n(e)}}function o(e){try{l(i.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(s,o)}l((i=i.apply(e,t||[])).next())}))};class l extends e.React.PureComponent{constructor(t){var l;super(t),this.myRef=e.React.createRef(),this.handleLayerSelection=e=>{var t;const a=e.target.value,i=null===(t=this.state.jimuMapView)||void 0===t?void 0:t.view.map.findLayerById(a);i&&this.setState({selectedLayer:i},(()=>{this.initializeSketchViewModel(this.state.jimuMapView.view)}))},this.initializeSketchViewModel=e=>{e.map.add(this.state.tempGraphicsLayer);const t=new i.default({view:e,layer:this.state.tempGraphicsLayer,updateOnGraphicClick:!1});t.on("create",(e=>{if("complete"===e.state){const t=e.graphic;this.setState({previewGraphic:t}),console.log("Polygon drawn, awaiting confirmation.")}})),this.setState({sketchViewModel:t})},this.handleFreehandPolygon=()=>{this.state.sketchViewModel&&(this.state.tempGraphicsLayer.removeAll(),this.state.sketchViewModel.create("polygon",{mode:"freehand"}))},this.handleConfirmPolygon=()=>o(this,void 0,void 0,(function*(){const{previewGraphic:e,selectedLayer:t}=this.state;if(t&&e)try{yield t.applyEdits({addFeatures:[new n.default({geometry:e.geometry,attributes:{},popupTemplate:new s.default({title:"Freehand Polygon",content:"This is a freehand drawn polygon."})})]}),console.log("Polygon added to the selected layer!"),this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null})}catch(e){console.error("Failed to add polygon to the selected layer:",e)}else console.error("No layer selected or no polygon to confirm!")})),this.handleCancelPolygon=()=>{this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null}),console.log("Polygon creation canceled.")},this.getFeatureLayers=(e,t)=>{const a=[];return e.forEach((e=>{"group"===e.type?e.title===t&&a.push(...this.getFeatureLayers(e.layers,t)):"feature"!==e.type||"National FireGuard Service"!==e.title&&"FireGuard Reference Points"!==e.title||a.push(e)})),a},this.activeViewChangeHandler=e=>{if(this.state.jimuMapView&&this.state.currentWidget&&this.state.currentWidget.destroy(),e){const t="Analyst Layers",i=this.getFeatureLayers(e.view.map.layers,t);if(this.setState({jimuMapView:e,availableLayers:i}),this.myRef.current){const t=new a.default({view:e.view,container:this.myRef.current,snappingOptions:{enabled:!0,distance:35,selfEnabled:!0}});this.setState({currentWidget:t}),this.initializeSketchViewModel(e.view)}else console.error("Could not find this.myRef.current")}},this.state={jimuMapView:null,currentWidget:null,sketchViewModel:null,selectedLayer:(null===(l=t.config)||void 0===l?void 0:l.selectedLayer)||null,availableLayers:[],previewGraphic:null,tempGraphicsLayer:new r.default}}render(){var a;let i=e.React.createElement("p",null,"Please select a map.");const{availableLayers:r,selectedLayer:n,previewGraphic:s}=this.state;return this.props.hasOwnProperty("useMapWidgetIds")&&this.props.useMapWidgetIds&&this.props.useMapWidgetIds[0]&&(i=e.React.createElement(t.JimuMapViewComponent,{useMapWidgetId:null===(a=this.props.useMapWidgetIds)||void 0===a?void 0:a[0],onActiveViewChange:this.activeViewChangeHandler})),e.React.createElement("div",{className:"widget-js-api-editor",style:{height:"100%",overflow:"auto"}},e.React.createElement("div",null,e.React.createElement("label",{htmlFor:"layer-select"},"Select Layer:"),e.React.createElement("select",{id:"layer-select",onChange:this.handleLayerSelection,value:(null==n?void 0:n.id)||""},e.React.createElement("option",{value:"",disabled:!0},"-- Select a Layer --"),r.map((t=>e.React.createElement("option",{key:t.id,value:t.id},t.title)))),e.React.createElement("button",{onClick:this.handleFreehandPolygon},"Draw Freehand Polygon")),s&&e.React.createElement("div",null,e.React.createElement("button",{onClick:this.handleConfirmPolygon},"Confirm"),e.React.createElement("button",{onClick:this.handleCancelPolygon},"Cancel")),e.React.createElement("div",{ref:this.myRef},e.React.createElement("style",null,"\n    .esri-editor__scroller {\n        overflow-y: auto;\n        padding-top: $cap-spacing--half;\n        padding-bottom: $cap-spacing;\n      }\n      .esri-editor__content-group {\n        max-height: 1em;\n      }\n      ")),i)}}function u(e){c.p=e}})(),d})())}}}));