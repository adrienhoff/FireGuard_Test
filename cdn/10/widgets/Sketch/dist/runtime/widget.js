System.register(["jimu-core","jimu-arcgis","esri/widgets/Sketch/SketchViewModel","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/Graphic","esri/widgets/FeatureForm"],(function(e,t){var a={},n={},r={},i={},o={},s={},l={};return{setters:[function(e){a.React=e.React},function(e){n.JimuMapViewComponent=e.JimuMapViewComponent},function(e){r.default=e.default},function(e){i.default=e.default},function(e){o.default=e.default},function(e){s.default=e.default},function(e){l.default=e.default}],execute:function(){e((()=>{var e={2089:e=>{"use strict";e.exports=s},5633:e=>{"use strict";e.exports=i},9620:e=>{"use strict";e.exports=o},3387:e=>{"use strict";e.exports=l},624:e=>{"use strict";e.exports=r},2686:e=>{"use strict";e.exports=n},9244:e=>{"use strict";e.exports=a}},t={};function c(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,c),r.exports}c.d=(e,t)=>{for(var a in t)c.o(t,a)&&!c.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var d={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(d),c.d(d,{__set_webpack_public_path__:()=>u,default:()=>l});var e=c(9244),t=c(2686),a=c(624),n=c(5633),r=c(9620),i=c(2089),o=c(3387),s=function(e,t,a,n){return new(a||(a=Promise))((function(r,i){function o(e){try{l(n.next(e))}catch(e){i(e)}}function s(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,s)}l((n=n.apply(e,t||[])).next())}))};class l extends e.React.PureComponent{constructor(t){super(t),this.myRef=e.React.createRef(),this.cleanupFeatureForm=()=>{this.featureFormRef.current&&(this.featureFormRef.current.destroy(),this.featureFormRef.current=null)},this.handleClose=()=>{this.cleanupFeatureForm(),this.setState({editorVisible:!1,selectedGraphic:null,previewGraphic:null,isDrawingPolygon:!1})},this.handleConfirmPolygon=()=>s(this,void 0,void 0,(function*(){const{previewGraphic:e,selectedLayer:t}=this.state;if(t&&e)try{const a=yield t.applyEdits({addFeatures:[new i.default({geometry:e.geometry,attributes:{}})]});if(a.addFeatureResults.length>0){const e=a.addFeatureResults[0].objectId;if(e){const a=t.createQuery();a.objectIds=[e],a.outFields=["*"],a.returnGeometry=!0;const n=yield t.queryFeatures(a);if(n.features.length>0){const e=n.features[0];console.log("Feature added:",e),yield new Promise((t=>{this.setState({selectedGraphic:e,editorVisible:!0,isSubmitted:!1,previewGraphic:null,isDrawingPolygon:!1},(()=>{setTimeout((()=>{const e=document.querySelector(".feature-form-container");e&&this.launchFeatureFormWidget(e)}),0),t()}))}))}}}this.state.tempGraphicsLayer.removeAll()}catch(e){console.error("Failed to add polygon to the selected layer:",e)}else console.error("No layer selected or no polygon to confirm!")})),this.launchFeatureFormWidget=e=>s(this,void 0,void 0,(function*(){const{jimuMapView:t,selectedGraphic:a}=this.state;if(!e||!t||!a)return void console.error("Missing container, map view, or selected graphic.");this.cleanupFeatureForm(),e.innerHTML="";const r=a.layer;if(!(r instanceof n.default))return void console.error("Selected graphic's layer is not a FeatureLayer.");const i={elements:[{type:"group",label:"Attributes",elements:r.fields.filter((e=>!["Shape__Area","Shape__Length"].includes(e.name))).map((e=>({type:"field",fieldName:e.name,label:e.alias||e.name,editable:e.editable})))}]},l=new o.default({container:e,layer:r,feature:a,formTemplate:i});this.featureFormRef.current=l,l.on("submit",(()=>s(this,void 0,void 0,(function*(){if(a)try{const e=l.getValues();Object.keys(e).forEach((t=>{a.attributes[t]=e[t]}));(yield r.applyEdits({updateFeatures:[a]})).updateFeatureResults.length>0?(console.log("Feature updated successfully!"),this.handleClose()):console.error("Failed to update the feature.")}catch(e){console.error("Error applying edits:",e)}else console.error("No feature selected for updating.")}))))})),this.handleLayerSelectionAndDrawing=(e,t)=>{var a;const n=null===(a=this.state.jimuMapView)||void 0===a?void 0:a.view.map.findLayerById(e);n&&this.setState({selectedLayer:n,activeDrawMode:t,isDrawingActive:!0},(()=>{this.initializeSketchViewModel(this.state.jimuMapView.view,t),this.startDrawing(t)}))},this.initializeSketchViewModel=(e,t)=>{e.map.add(this.state.tempGraphicsLayer);const n=e=>{const t=[];return e.forEach((e=>{"group"===e.type?t.push(...n(e.layers)):"feature"===e.type&&t.push(e)})),t},r="polygon"===t?n(e.map.layers):[],i={view:e,layer:this.state.tempGraphicsLayer,updateOnGraphicClick:!0,defaultCreateOptions:{mode:"click",hasZ:!1},snappingOptions:{enabled:!0,distance:15,featureSources:r.map((e=>({layer:e,enabled:!0})))}},o={view:e,layer:this.state.tempGraphicsLayer,updateOnGraphicClick:!0,defaultCreateOptions:{mode:"freehand",hasZ:!1},snappingOptions:null},s=new a.default("polygon"===t?i:o);s.on("create",(e=>{if("complete"===e.state){const t=e.graphic;this.setState({previewGraphic:t})}else"cancel"===e.state?(this.setState({previewGraphic:null,isDrawingPolygon:!1}),this.state.tempGraphicsLayer.removeAll()):"active"===e.state&&this.setState({isDrawingPolygon:!0})})),s.on("update",(e=>{if("complete"===e.state&&e.graphics.length>0){const t=e.graphics[0];this.setState({selectedFeature:t}),console.log("Feature selected:",t)}})),this.setState({sketchViewModel:s})},this.startDrawing=e=>{this.state.sketchViewModel&&(this.setState({isDrawingPolygon:!0}),this.state.tempGraphicsLayer.removeAll(),this.state.jimuMapView.view.cursor="default",this.state.sketchViewModel.create("polygon",{mode:e}))},this.startReshapeTempGraphic=()=>{const{sketchViewModel:e,tempGraphicsLayer:t}=this.state;if(e&&t.graphics.length>0){const a=t.graphics.getItemAt(0);e.update([a],{tool:"transform",enableScaling:!0,enableRotation:!0,preserveAspectRatio:!1}),console.log("Editing vertices of the temp graphics layer graphic.")}else console.warn("No temporary graphic available for reshaping.")},this.handleCancelPolygon=()=>{this.state.sketchViewModel&&(this.state.sketchViewModel.cancel(),this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null})),this.state.tempGraphicsLayer&&this.state.tempGraphicsLayer.removeAll(),this.setState({previewGraphic:null,isDrawingPolygon:!1,activeDrawMode:null})},this.getFeatureLayers=(e,t)=>{const a=[];return e.forEach((e=>{"group"===e.type?e.title===t&&a.push(...this.getFeatureLayers(e.layers,t)):"feature"===e.type&&"National FireGuard Service"===e.title&&a.push(e)})),a},this.activeViewChangeHandler=e=>{if(e){const t="Analyst Layers",a=this.getFeatureLayers(e.view.map.layers,t);this.setState({jimuMapView:e,availableLayers:a}),this.initializeSketchViewModel(e.view,"polygon")}},this.handleSelectFeature=e=>{var t;const a=null===(t=this.state.jimuMapView)||void 0===t?void 0:t.view.map.findLayerById(e);if(a&&this.state.jimuMapView){const e=this.state.jimuMapView.view,t=e.on("click",(n=>s(this,void 0,void 0,(function*(){const r={x:n.x,y:n.y};try{const n=(yield e.hitTest(r)).results.find((e=>e.graphic.layer===a));if(n){const a=n.graphic;console.log("Selected feature:",a),this.state.sketchViewModel||this.initializeSketchViewModel(e,"polygon"),this.setState({selectedGraphic:a,editorVisible:!0},(()=>{const e=document.querySelector(".feature-form-container");e&&this.launchFeatureFormWidget(e),this.state.sketchViewModel&&(this.state.sketchViewModel.updateOnGraphicClick=!0,this.state.sketchViewModel.update([a],{tool:"reshape",enableScaling:!0,enableRotation:!0,preserveAspectRatio:!1}),console.log("Started reshaping selected graphic."))})),t.remove()}}catch(e){console.error("Error selecting feature:",e)}}))))}},this.getLayerSymbol=e=>{var t,a;if(!e)return null;try{const n=e.renderer;let r;if("simple"===n.type?r=n.symbol:"unique-value"===n.type&&(r=n.defaultSymbol||n.uniqueValueInfos[0]&&n.uniqueValueInfos[0].symbol),r&&"simple-fill"===r.type)return{fillColor:r.color?`rgba(${r.color.r}, ${r.color.g}, ${r.color.b}, ${r.color.a})`:"rgba(0, 0, 0, 0.3)",outlineColor:(null===(t=r.outline)||void 0===t?void 0:t.color)?`rgba(${r.outline.color.r}, ${r.outline.color.g}, ${r.outline.color.b}, ${r.outline.color.a})`:"#000",outlineWidth:(null===(a=r.outline)||void 0===a?void 0:a.width)||1}}catch(e){console.error("Error getting layer symbol:",e)}return null},this.handleDelete=()=>s(this,void 0,void 0,(function*(){const{selectedGraphic:e}=this.state;if(e&&e.layer)try{const t=yield e.layer.applyEdits({deleteFeatures:[e]});t.deleteFeatureResults.length>0&&t.deleteFeatureResults[0].success?(console.log("Feature deleted successfully"),this.handleClose()):console.error("Failed to delete feature")}catch(e){console.error("Error deleting feature:",e)}else console.error("No feature selected for deletion")})),this.handleReshapefeature=()=>s(this,void 0,void 0,(function*(){const{selectedGraphic:e,jimuMapView:t}=this.state;if(e&&e.layer)try{this.state.sketchViewModel||this.initializeSketchViewModel(t.view,"polygon");const a=this.state.sketchViewModel;a.layer=e.layer,a.updateOnGraphicClick=!0,yield a.update([e],{tool:"reshape",enableRotation:!1,enableScaling:!1,preserveAspectRatio:!1}),a.on("update",(t=>s(this,void 0,void 0,(function*(){if("complete"===t.state&&t.graphics.length>0)try{const a=yield e.layer.applyEdits({updateFeatures:[t.graphics[0]]});a.updateFeatureResults.length>0&&a.updateFeatureResults[0].success?console.log("Feature reshaped successfully"):console.error("Failed to reshape feature")}catch(e){console.error("Error applying reshape edits:",e)}}))))}catch(e){console.error("Error initiating reshape:",e)}else console.error("No feature selected for reshaping")})),this.handleEscKey=e=>{var t;if("Escape"===e.key){const{sketchViewModel:e}=this.state;e&&e.cancel(),null===(t=this.state.tempGraphicsLayer)||void 0===t||t.removeAll(),this.setState({previewGraphic:null,isDrawingActive:!1,activeDrawMode:null})}},this.cancelDrawing=()=>{var e;const{sketchViewModel:t}=this.state;t&&(t.cancel(),null===(e=this.state.tempGraphicsLayer)||void 0===e||e.removeAll(),this.setState({previewGraphic:null,isDrawingActive:!1,activeDrawMode:null}))},this.featureFormRef=e.React.createRef(),this.state={jimuMapView:null,sketchViewModel:null,selectedLayer:null,availableLayers:[],previewGraphic:null,tempGraphicsLayer:new r.default,isDrawingPolygon:!1,editorVisible:!1,selectedGraphic:null}}componentDidMount(){document.addEventListener("keydown",this.handleEscKey)}componentWillUnmount(){document.removeEventListener("keydown",this.handleEscKey)}render(){var a;let n=e.React.createElement("p",null,"Please select a map.");const{availableLayers:r,previewGraphic:i,editorVisible:o,isDrawingPolygon:s}=this.state;return this.props.hasOwnProperty("useMapWidgetIds")&&(null===(a=this.props.useMapWidgetIds)||void 0===a?void 0:a[0])&&(n=e.React.createElement(t.JimuMapViewComponent,{useMapWidgetId:this.props.useMapWidgetIds[0],onActiveViewChange:this.activeViewChangeHandler})),e.React.createElement("div",{className:"widget-js-api-editor",style:{height:"100%",overflow:"auto"}},e.React.createElement("div",{className:"layer-buttons"},r.map((t=>{const a=this.getLayerSymbol(t);return e.React.createElement("div",{key:t.id,className:"layer-option"},e.React.createElement("div",{className:"layer-header"},a&&e.React.createElement("div",{className:"layer-symbol",style:{backgroundColor:a.fillColor,border:`${a.outlineWidth}px solid ${a.outlineColor}`}}),e.React.createElement("h3",{className:"layer-title"},t.title)),this.state.isDrawingActive&&e.React.createElement("div",{style:{marginTop:"8px",color:"#555",fontSize:"14px"}},"Double-click to finish drawing"),!this.state.isDrawingActive&&"freehand"!==this.state.activeDrawMode&&e.React.createElement("button",{className:"button-base button-primary",onClick:()=>this.handleLayerSelectionAndDrawing(t.id,"polygon")},"Create Polygon"),!this.state.isDrawingActive&&"polygon"!==this.state.activeDrawMode&&e.React.createElement("button",{className:"button-base button-primary",onClick:()=>this.handleLayerSelectionAndDrawing(t.id,"freehand")},"Create Freehand Polygon"),!this.state.isDrawingActive&&e.React.createElement("button",{onClick:()=>this.handleSelectFeature(t.id),style:{padding:"8px 16px",backgroundColor:"#4CAF50",color:"white",border:"none",borderRadius:"4px",marginLeft:"10px"}},"Select Feature"))}))),this.state.isDrawingActive&&"polygon"===this.state.activeDrawMode&&e.React.createElement("div",{style:{position:"fixed",top:"1rem",left:"50%",transform:"translateX(-50%)",backgroundColor:"rgba(255, 0, 0, 0.9)",color:"white",padding:"0.75rem 1.5rem",borderRadius:"0.5rem",zIndex:1e3,display:"flex",alignItems:"center",gap:"0.5rem"}},e.React.createElement("span",null,"Press ESC key to cancel drawing")),i&&e.React.createElement("div",{className:"preview-controls"},e.React.createElement("button",{onClick:this.startReshapeTempGraphic,className:"button-base button-secondary"},"Reshape"),e.React.createElement("button",{onClick:this.handleConfirmPolygon,className:"button-base button-success"},"Confirm"),e.React.createElement("button",{onClick:this.handleCancelPolygon,className:"button-base button-danger"},"Cancel Polygon")),o&&e.React.createElement("div",{className:"editor-container"},e.React.createElement("div",{className:"feature-form-container"}),e.React.createElement("div",{className:"button-container"},e.React.createElement("button",{onClick:this.handleClose,style:{padding:"8px 16px",backgroundColor:"#f0f0f0",border:"1px solid #ccc",borderRadius:"4px"}},"Close"),e.React.createElement("button",{onClick:()=>{const e=this.featureFormRef.current;e&&e.submit()},style:{padding:"8px 16px",backgroundColor:"#0066cc",color:"white",border:"none",borderRadius:"4px"}},"Submit Changes"),e.React.createElement("button",{onClick:this.handleDelete,className:"button-base button-danger"},"Delete Feature"))),e.React.createElement("div",{ref:this.myRef},e.React.createElement("style",null,"\n      .layer-buttons {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        padding: 1rem;\n        max-width: 800px;\n        margin: 0 auto;\n      }\n      \n      .layer-option {\n        background: white;\n        padding: 1.5rem;\n        border-radius: 0.5rem;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        display: flex;\n        align-items: center;\n        gap: 1.5rem;\n        flex-wrap: wrap;\n      }\n      \n      .layer-header {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        flex: 1;\n        min-width: 200px;\n      }\n      \n      .layer-symbol {\n        width: 20px;\n        height: 20px;\n        border-radius: 4px;\n      }\n      \n      .layer-title {\n        font-size: 1.25rem;\n        font-weight: 600;\n        color: #1f2937;\n        margin: 0;\n      }\n\n           \n      .button-base {\n        padding: 0.75rem 1.25rem;\n        border-radius: 0.375rem;\n        font-weight: 500;\n        transition: all 0.2s;\n        outline: none;\n        border: none;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n      }\n      \n      .button-base:focus {\n        box-shadow: 0 0 0 2px #e5e7eb, 0 0 0 4px #3b82f6;\n      }\n      \n      .button-base:active {\n        transform: scale(0.98);\n      }\n      \n      .button-primary {\n        background-color: #3b82f6;\n        color: white;\n      }\n      \n      .button-primary:hover {\n        background-color: #2563eb;\n      }\n      \n      .button-primary:active {\n        background-color: #1d4ed8;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-success {\n        background-color: #10b981;\n        color: white;\n      }\n      \n      .button-success:hover {\n        background-color: #059669;\n      }\n      \n      .button-success:active {\n        background-color: #047857;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-secondary {\n        background-color: #f3f4f6;\n        color: #374151;\n        border: 1px solid #e5e7eb;\n      }\n      \n      .button-secondary:hover {\n        background-color: #e5e7eb;\n      }\n      \n      .button-secondary:active {\n        background-color: #d1d5db;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .button-danger {\n        background-color: #ef4444;\n        color: white;\n      }\n      \n      .button-danger:hover {\n        background-color: #dc2626;\n      }\n      \n      .button-danger:active {\n        background-color: #b91c1c;\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n      }\n      \n      .select-feature-button {\n        position: fixed;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        z-index: 1000;\n      }\n      \n      .preview-controls {\n        position: fixed;\n        bottom: 2rem;\n        right: 2rem;\n        display: flex;\n        gap: 0.5rem;\n        padding: 1rem;\n        background: white;\n        border-radius: 0.5rem;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        z-index: 1000;\n      }\n      \n      .editor-container {\n        position: fixed;\n        top: 50%;\n        left: 20%;\n        transform: translate(-50%, -50%);\n        background: white;\n        border-radius: 0.5rem;\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n        z-index: 2000;\n        width: 500px;\n        height: 600px;\n        display: flex;\n        flex-direction: column;\n        padding: 1.5rem;\n      }\n      \n      .feature-form-container {\n        flex: 1;\n        overflow-y: auto;\n        margin-bottom: 4rem;\n      }\n      \n      .button-container {\n        position: absolute;\n        bottom: 1rem;\n        right: 1rem;\n        display: flex;\n        gap: 0.5rem;\n        padding: 1rem;\n        background-color: white;\n        z-index: 2001;\n      }\n    ")),n)}}function u(e){c.p=e}})(),d})())}}}));